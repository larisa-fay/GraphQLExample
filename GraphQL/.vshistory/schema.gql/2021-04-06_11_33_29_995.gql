
type Query {
stats: Foo
}

type Mutation {

doABCDE(where: ABCDEWhere): String
uniontest: FooBarBaz
}

input ABCDEWhere {
abcd: ABCD
}

type ABCD {
abc: ABC
}

type ABC{
abcString: String
}

union FooBarBaz = Foo | Bar | Baz

type Foo {
foo: String!
}
type Bar {
bar: String!
}
type Baz {
baz: String!
}
